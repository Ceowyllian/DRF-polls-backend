openapi: 3.0.3
info:
  title: DRF polls API
  description: Sample django polls app.
  version: 1.0.0
servers:
  - url: 'http://localhost:8000/polls/'
tags:
  - name: Question
    description: Questions in the polls service
  - name: Choice
    description: Answer options for the question

paths:

  /questions/:
    get:
      tags:
        - Question
      summary: Get list of all questions.
      description: List of questions.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
    post:
      tags:
        - Question
      summary: Create new question
      description: Create new question with specified title, text and choices
      requestBody:
        description: Question
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionWithChoices'
      responses:
        201:
          description: New question was created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionWithChoices'
        400:
          description: Error.

  /questions/{question_slug}/:
    get:
      tags:
        - Question
      parameters:
        - name: question_slug
          in: path
          description: slug of question to return
          required: true
          schema:
            type: string
            format: slug
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
    patch:
      tags:
        - Question
      parameters:
        - name: question_slug
          in: path
          description: slug of question to be updated
          required: true
          schema:
            type: string
            format: slug
      requestBody:
        description: Question
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        200:
          description: Updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
    delete:
      tags:
        - Question
      parameters:
        - name: question_slug
          in: path
          description: slug of question to be deleted
          required: true
      responses:
        204:
          description: Deleted successfully

  /questions/{question_slug}/choices/:
    get:
      tags:
        - Choice
      parameters:
        - name: question_slug
          in: path
          description: slug of the question
          required: true
          schema:
            type: string
            format: slug
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Choice'
    post:
      tags:
        - Choice
      parameters:
        - name: question_slug
          description: slug of the question
          in: path
          required: true
          schema:
            type: string
            format: slug
      requestBody:
        description: Choice
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Choice'
      responses:
        201:
          description: Created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Choice'

  /questions/{question_slug}/choices/{choice_uuid}/:
    get:
      tags:
        - Choice
      parameters:
        - name: question_slug
          in: path
          description: slug of the question
          required: true
          schema:
            type: string
            format: slug
        - name: choice_uuid
          in: path
          description: uuid of the choice
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Choice'
    delete:
      tags:
        - Choice
      parameters:
        - name: question_slug
          in: path
          required: true
          schema:
            type: string
            format: slug
        - name: choice_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: deleted successfully


components:
  schemas:

    Question:
      type: object
      required:
        - question_title
        - question_text
        - choices
      properties:
        question_title:
          type: string
          maxLength: 40
        question_text:
          type: string
          maxLength: 200
        question_slug:
          type: string
          readOnly: true

    QuestionWithChoices:
      allOf:
        - $ref: '#/components/schemas/Question'
        - type: object
          properties:
            choices:
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/Choice'

    Choice:
      type: object
      properties:
        choice_uuid:
          type: string
          format: uuid
          readOnly: true
        choice_text:
          type: string
          maxLength: 200
        votes:
          type: integer
          format: int64
